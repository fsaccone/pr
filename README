Prometheus
==========

Simple package manager for POSIX systems.

Requirements
------------

- C99 compiler
- libc
- libcurl
- Lua

Installaton
-----------

	$ make
	# make install

Usage
-----

	prometheus -i [-p prefix] package ...
	prometheus -u [-p prefix] [-r]  package ...
	prometheus -l [-p prefix]
	prometheus -a

Repositories
============

The repository tree must have a set of directories, each named after the
package it represents: each of these directories must contain the following
mandatory files:

- build.lua
- outs
- sources

Each package directory may also contain the following optional files:

- depends
- requires

The program chroots in a temporary directory before building a package: it is
initialized with a /src directory, a /bin directory and a /prometheus.log file.

build.lua
---------

This file is a Lua script which is copied as /prometheus.build.lua in the
package temporary directory and called from the /src directory.

Its job is to build the package from the files present in the /src directory
and install what it needs to the root of the temporary directory.

outs
----

Each line of the outs file must be the absolute path of each file to be
installed to the system.

Only files, and not directories, must be listed.

When uninstalling, all listed files are removed from the system. A package is
considered installed when all listed files exist.

The recommended way to generate it is to install the package manually and use
find to generate outs:

	$ find $builddir -type f \
	                 -exec echo {} \; | sed "s|^$builddir||" > outs

sources
-------

Each line of the sources file must be of the following format:

	SHA256 URL [RELPATH]

A valid URL is the relative path to a file in the package directory, a
HTTP/HTTPS address or a FTP address.

If URL is a local file, it must not be a directory.

Each source must have a corresponding SHA256 hash.

An optional RELPATH field may be provided: it is the path, relative to /src,
where the fetched source file is moved to after being retrieved and verified.

depends
-------

Each line of the depends file must be of the following format:

	PACKAGE [runtime]

A valid PACKAGE is the name of a package in the repository.

Each PACKAGE listed here is built prior to the package being built, is
installed to the root of the temporary directory and is ignored when installing
the package.

Additionally, when "runtime" is present after PACKAGE, PACKAGE gets also
installed to the system.

requires
--------

Each line of the requires file must be a program which exists in any of the
PATH directories.

The listed programs are copied to the /bin of the package temporary directory.
